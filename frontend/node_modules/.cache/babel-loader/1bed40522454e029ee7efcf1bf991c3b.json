{"remainingRequest":"/var/www/html/0_Controle_de_Vendas/frontend/node_modules/babel-loader/lib/index.js!/var/www/html/0_Controle_de_Vendas/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/0_Controle_de_Vendas/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/0_Controle_de_Vendas/frontend/src/view/Vendas.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/0_Controle_de_Vendas/frontend/src/view/Vendas.vue","mtime":1633158486735},{"path":"/var/www/html/0_Controle_de_Vendas/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/0_Controle_de_Vendas/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/0_Controle_de_Vendas/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/0_Controle_de_Vendas/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBteUNyb3BwYToge30KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGxvYWRDcm9wcGVkSW1hZ2U6IGZ1bmN0aW9uIHVwbG9hZENyb3BwZWRJbWFnZSgpIHsKICAgICAgdGhpcy5teUNyb3BwYS5nZW5lcmF0ZUJsb2IoZnVuY3Rpb24gKGJsb2IpIHsvLyB3cml0ZSBjb2RlIHRvIHVwbG9hZCB0aGUgY3JvcHBlZCBpbWFnZSBmaWxlIChhIGZpbGUgaXMgYSBibG9iKQogICAgICB9LCAnaW1hZ2UvanBlZycsIDAuOCk7IC8vIDgwJSBjb21wcmVzc2VkIGpwZWcgZmlsZQogICAgfQogIH0KfTs="},{"version":3,"sources":["Vendas.vue"],"names":[],"mappings":";;;;;;;AAQA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,OAAA,EAAA;AACA,IAAA,kBADA,gCACA;AACA,WAAA,QAAA,CAAA,YAAA,CAAA,UAAA,IAAA,EAAA,CACA;AACA,OAFA,EAEA,YAFA,EAEA,GAFA,EADA,CAGA;AACA;AALA;AANA,CAAA","sourcesContent":["<template>\n  <div class=\"vendas\">\n    <input type=\"text\" class=\"text\">\n    <croppa></croppa>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      myCroppa: {}\n    }\n  },\n  methods: {\n    uploadCroppedImage () {\n      this.myCroppa.generateBlob((blob) => {\n        // write code to upload the cropped image file (a file is a blob)\n      }, 'image/jpeg', 0.8) // 80% compressed jpeg file\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":"src/view"}]}