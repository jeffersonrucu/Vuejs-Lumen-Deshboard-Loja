{"remainingRequest":"/var/www/html/0_Controle_de_Vendas/frontend/node_modules/babel-loader/lib/index.js!/var/www/html/0_Controle_de_Vendas/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/0_Controle_de_Vendas/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/0_Controle_de_Vendas/frontend/src/view/NewProduct.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/0_Controle_de_Vendas/frontend/src/view/NewProduct.vue","mtime":1633569332073},{"path":"/var/www/html/0_Controle_de_Vendas/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/0_Controle_de_Vendas/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/0_Controle_de_Vendas/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/0_Controle_de_Vendas/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgVGhlTWFzayB9IGZyb20gJ3Z1ZS10aGUtbWFzayc7CmltcG9ydCB7IE1vbmV5IH0gZnJvbSAndi1tb25leSc7CmltcG9ydCBWdWVCYXJjb2RlIGZyb20gJ3Z1ZS1iYXJjb2RlJzsKaW1wb3J0IHsgZ2VuZXJhdGVBbmREb3dubG9hZEJhcmNvZGVJblBERiB9IGZyb20gJ0AvZ2VuZXJhdGVCYXJjb2RlLmpzJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsgLy8gaW1wb3J0IGpzcGRmIGZyb20gJ2pzcGRmJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgICdtYXNrLWlucHV0JzogVGhlTWFzaywKICAgIGJhcmNvZGU6IFZ1ZUJhcmNvZGUsCiAgICBNb25leTogTW9uZXkKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBteUNyb3BwYToge30sCiAgICAgIGltYWdlUHJvZHVjdDogJycsCiAgICAgIGlkUHJvZHVjdDogJycsCiAgICAgIHByb2R1Y3Q6IHsKICAgICAgICB2YWx1ZTogJycsCiAgICAgICAgY29sb3JzOiBbXSwKICAgICAgICBuYW1lOiAnJywKICAgICAgICBhbW91bnQ6ICcnCiAgICAgIH0sCiAgICAgIG1vbmV5OiB7CiAgICAgICAgZGVjaW1hbDogJywnLAogICAgICAgIHRob3VzYW5kczogJy4nLAogICAgICAgIHByZWZpeDogJ1IkICcsCiAgICAgICAgcHJlY2lzaW9uOiAyLAogICAgICAgIG1hc2tlZDogZmFsc2UKICAgICAgfSwKICAgICAgcGlja2VyOiBudWxsLAogICAgICB1c2VyTW9uZXk6IG51bGwsCiAgICAgIHRyYW5zYm9yZG86IG51bGwsCiAgICAgIGJ0blNhbGU6IGZhbHNlLAogICAgICBzaG93Q29sb3I6IGZhbHNlLAogICAgICBzdGF0dXM6IG51bGwsCiAgICAgIGVycm9yOiBudWxsCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGVycm9yOiBmdW5jdGlvbiBlcnJvcigpIHsKICAgICAgaWYgKHRoaXMuZXJyb3IuZXJyb3IgPT09ICdTZXNzw6NvIGV4cGlyYWRvJykgewogICAgICAgIGxvY2FsU3RvcmFnZS50b2tlbiA9IG51bGw7CiAgICAgICAgdGhpcy4kcm91dGVyLmdvKDApOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGxvYWRDcm9wcGVkSW1hZ2U6IGZ1bmN0aW9uIHVwbG9hZENyb3BwZWRJbWFnZSgpIHsKICAgICAgdGhpcy5teUNyb3BwYS5nZW5lcmF0ZUJsb2IoZnVuY3Rpb24gKGJsb2IpIHsvLyB3cml0ZSBjb2RlIHRvIHVwbG9hZCB0aGUgY3JvcHBlZCBpbWFnZSBmaWxlIChhIGZpbGUgaXMgYSBibG9iKQogICAgICB9LCAnaW1hZ2UvanBlZycsIDAuOCk7IC8vIDgwJSBjb21wcmVzc2VkIGpwZWcgZmlsZQogICAgfSwKICAgIGFkZENvbG9yOiBmdW5jdGlvbiBhZGRDb2xvcigpIHsKICAgICAgdGhpcy5zaG93Q29sb3IgPSBmYWxzZTsKICAgICAgdGhpcy5wcm9kdWN0LmNvbG9ycy5wdXNoKHRoaXMucGlja2VyLmhleCk7CiAgICB9LAogICAgcmVtb3ZlQ29sb3I6IGZ1bmN0aW9uIHJlbW92ZUNvbG9yKGkpIHsKICAgICAgdGhpcy5wcm9kdWN0LmNvbG9ycy5zcGxpY2UoaSwgMSk7CiAgICB9LAogICAgcmVnaXN0ZXI6IGZ1bmN0aW9uIHJlZ2lzdGVyKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGNvbmZpZyA9IHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICB0b2tlbjogbG9jYWxTdG9yYWdlLnRva2VuLAogICAgICAgICAgaWQ6IGxvY2FsU3RvcmFnZS5pZAogICAgICAgIH0KICAgICAgfTsKICAgICAgdGhpcy5teUNyb3BwYS5nZW5lcmF0ZUJsb2IoZnVuY3Rpb24gKGJsb2IpIHsKICAgICAgICB2YXIgZGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgIGRhdGEuYXBwZW5kKCdiYXJjb2RlJywgX3RoaXMuaWRQcm9kdWN0KTsKICAgICAgICBkYXRhLmFwcGVuZCgnbmFtZScsIF90aGlzLnByb2R1Y3QubmFtZSk7CiAgICAgICAgZGF0YS5hcHBlbmQoJ3ZhbHVlJywgX3RoaXMucHJvZHVjdC52YWx1ZSk7CiAgICAgICAgZGF0YS5hcHBlbmQoJ2Ftb3VudCcsIF90aGlzLnByb2R1Y3QuYW1vdW50KTsKICAgICAgICBkYXRhLmFwcGVuZCgnY29sb3JzJywgX3RoaXMucHJvZHVjdC5jb2xvcnMpOwogICAgICAgIGRhdGEuYXBwZW5kKCdwaG90bycsIGJsb2IsIF90aGlzLm15Q3JvcHBhLmdldENob3NlbkZpbGUoKS5uYW1lKTsKICAgICAgICBheGlvcy5wb3N0KCdodHRwOi8vbG9jYWxob3N0OjgwMTAvcHJvZHVjdC9yZWdpc3RlcicsIGRhdGEsIGNvbmZpZykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIF90aGlzLnN0YXR1cyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICBnZW5lcmF0ZUFuZERvd25sb2FkQmFyY29kZUluUERGKF90aGlzLmlkUHJvZHVjdCk7CiAgICAgICAgICBfdGhpcy5wcm9kdWN0ID0gewogICAgICAgICAgICBuYW1lOiAnJywKICAgICAgICAgICAgdmFsdWU6ICcnLAogICAgICAgICAgICBhbW91bnQ6ICcnLAogICAgICAgICAgICBjb2xvcnM6ICcnCiAgICAgICAgICB9OwogICAgICAgICAgX3RoaXMubXlDcm9wcGEgPSBbXTsKICAgICAgICAgIF90aGlzLmlkUHJvZHVjdCA9ICcnOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgX3RoaXMuZXJyb3IgPSBlcnJvci5yZXNwb25zZTsKICAgICAgICB9KTsKICAgICAgfSwgJ2ltYWdlL3BuZycsIDAuOCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgLy8gZ2VyYXRvciBjb2RlYmFyCiAgICB2YXIgY29kZSA9IG51bGw7CgogICAgZm9yICh2YXIgaSA9IDA7IGkgPCA5OyBpKyspIHsKICAgICAgY29kZSArPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA5ICsgMSkudG9TdHJpbmcoKTsKICAgIH0KCiAgICB0aGlzLmlkUHJvZHVjdCA9IGNvZGU7CiAgfQp9Ow=="},{"version":3,"sources":["NewProduct.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"vendas\">\n    <div class=\"box-product\">\n      <croppa\n        :width=\"300\"\n        :height=\"500\"\n        :prevent-white-space=\"true\"\n        :show-remove-button=\"false\"\n        placeholder=\"Imagem do Produto\"\n        canvas-color=\"#B2E3FF\"\n        v-model=\"myCroppa\"\n      >\n        <img crossOrigin=\"anonymous\"\n          :src= imageProduct\n          slot=\"initial\"\n        >\n      </croppa>\n\n      <div class=\"box-inf\">\n        <div>\n          <p> c√≥digo do produto </p>\n          <mask-input type='text' mask=\"############\" class=\"id-product\" v-model=\"idProduct\" disabled/>\n          <barcode\n            v-model=\"idProduct\"\n            class=\"mt-2\"\n            tag=\"img\"\n          >\n            Can't generate the barcode\n          </barcode>\n        </div>\n        <div>\n          <p> produto </p>\n          <input type='text' v-model=\"product.name\"/>\n        </div>\n        <div>\n          <p> valor </p>\n          <money v-model=\"product.value\" v-bind=\"money\"></money>\n        </div>\n        <div>\n          <p>quantidade no estoque</p>\n          <input type='number' v-model=\"product.amount\"/>\n        </div>\n        <!-- <div>\n          <p>Cores</p>\n          <div class=\"colors\">\n            <div\n              class=\"color\"\n              v-for=\"color, index in product.colors\" :key=\"color\"\n              :style=\"'background-color:' + color\"\n              @click=\"removeColor(index)\"\n            >\n            </div>\n             <div\n              class=\"color color-add\"\n            >\n              <span v-if=\"showColor === false\" @click=\"showColor = !showColor\">+</span>\n              <span v-if=\"showColor === true\" @click=\"addColor\">x</span>\n            </div>\n            <v-color-picker\n              height=\"200\"\n              hide-canvas\n              mode=\"hexa\"\n              v-show=\"showColor\"\n              v-model=\"picker\"\n            ></v-color-picker>\n          </div>\n        </div> -->\n        <v-alert\n          dense\n          outlined\n          type=\"error\"\n          v-if=\"error != null\"\n        >\n          {{error.error}}\n        </v-alert>\n        <v-btn\n          v-bind=\"attrs\"\n          v-on=\"on\"\n          color=\"#29CC97\"\n          class=\"btn-date mt-2\"\n          @click=\"register\"\n        >\n        Cadastrar\n        </v-btn>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { TheMask } from 'vue-the-mask'\nimport { Money } from 'v-money'\nimport VueBarcode from 'vue-barcode'\nimport { generateAndDownloadBarcodeInPDF } from '@/generateBarcode.js'\nimport axios from 'axios'\n// import jspdf from 'jspdf'\n\nexport default {\n  components: {\n    'mask-input': TheMask,\n    barcode: VueBarcode,\n    Money\n  },\n\n  data () {\n    return {\n      myCroppa: {},\n      imageProduct: '',\n      idProduct: '',\n      product: {\n        value: '',\n        colors: [],\n        name: '',\n        amount: ''\n      },\n      money: {\n        decimal: ',',\n        thousands: '.',\n        prefix: 'R$ ',\n        precision: 2,\n        masked: false\n      },\n      picker: null,\n      userMoney: null,\n      transbordo: null,\n      btnSale: false,\n      showColor: false,\n      status: null,\n      error: null\n    }\n  },\n  watch: {\n    error () {\n      if (this.error.error === 'Sess√£o expirado') {\n        localStorage.token = null\n        this.$router.go(0)\n      }\n    }\n  },\n  methods: {\n    uploadCroppedImage () {\n      this.myCroppa.generateBlob((blob) => {\n        // write code to upload the cropped image file (a file is a blob)\n      }, 'image/jpeg', 0.8) // 80% compressed jpeg file\n    },\n    addColor () {\n      this.showColor = false\n      this.product.colors.push(this.picker.hex)\n    },\n    removeColor (i) {\n      this.product.colors.splice(i, 1)\n    },\n    register () {\n      const config = {\n        headers: {\n          token: localStorage.token,\n          id: localStorage.id\n        }\n      }\n\n      this.myCroppa.generateBlob((blob) => {\n        const data = new FormData()\n        data.append('barcode', this.idProduct)\n        data.append('name', this.product.name)\n        data.append('value', this.product.value)\n        data.append('amount', this.product.amount)\n        data.append('colors', this.product.colors)\n        data.append('photo', blob, this.myCroppa.getChosenFile().name)\n\n        axios\n          .post('http://localhost:8010/product/register', data, config)\n          .then(response => {\n            this.status = response.data\n            generateAndDownloadBarcodeInPDF(this.idProduct)\n            this.product = {\n              name: '',\n              value: '',\n              amount: '',\n              colors: ''\n            }\n            this.myCroppa = []\n            this.idProduct = ''\n          })\n          .catch(error => {\n            this.error = error.response\n          })\n      }, 'image/png', 0.8)\n    }\n  },\n  created () {\n    // gerator codebar\n    var code = null\n    for (var i = 0; i < 9; i++) {\n      code += Math.floor(Math.random() * 9 + 1).toString()\n    }\n    this.idProduct = code\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"sourceRoot":"src/view"}]}